{"version":3,"sources":["block_pass.js"],"names":["com","require","cc","Class","extends","Component","properties","pass","Prefab","onBeginContact","contact","self","other","node","group","boom","instantiate","find","addChild","setPosition","getPosition","gm","getComponent","gamePause","nextLevel","x","y","MAP_OBJ","destroy","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAMC,QAAQ,QAAR,CAAV;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,cAAML,GAAGM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBQ,KAHP;;AAsBL;AACAC,kBAvBK,0BAuBUC,OAvBV,EAuBmBC,IAvBnB,EAuByBC,KAvBzB,EAuB+B;AAChC,YAAGA,MAAMC,IAAN,CAAWC,KAAX,IAAoB,MAAvB,EAA8B;AAC1B,iBAAKC,IAAL;AACH;AACJ,KA3BI;;AA4BL;;AAEAA,QA9BK,kBA8BC;AACF,YAAIR,OAAOL,GAAGc,WAAH,CAAe,KAAKT,IAApB,CAAX;AACIL,WAAGe,IAAH,CAAQ,eAAR,EAAyBC,QAAzB,CAAkCX,IAAlC;AACAA,aAAKY,WAAL,CAAiB,KAAKN,IAAL,CAAUO,WAAV,EAAjB;;AAEA,YAAIC,KAAKnB,GAAGe,IAAH,CAAQ,QAAR,EAAkBK,YAAlB,CAA+B,aAA/B,CAAT;AACAD,WAAGE,SAAH;AACAF,WAAGG,SAAH;AACA,YAAIC,IAAI,KAAKZ,IAAL,CAAUS,YAAV,CAAuB,UAAvB,EAAmCG,CAA3C;AACA,YAAIC,IAAI,KAAKb,IAAL,CAAUS,YAAV,CAAuB,UAAvB,EAAmCI,CAA3C;AACA1B,YAAI2B,OAAJ,CAAYF,CAAZ,EAAeC,CAAf,IAAoB,IAApB;AACA,aAAKb,IAAL,CAAUe,OAAV;AACP,KA1CI;AA4CLC,SA5CK,mBA4CI,CAER;AA9CI;;AAgDL;AAhDJ","file":"block_pass.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\blocks","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nvar com = require('common');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        pass: cc.Prefab\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onBeginContact(contact, self, other){\r\n        if(other.node.group == \"ball\"){\r\n            this.boom();\r\n        }\r\n    },\r\n    // onLoad () {},\r\n\r\n    boom(){\r\n        let pass = cc.instantiate(this.pass);\r\n            cc.find(\"Canvas/blocks\").addChild(pass)\r\n            pass.setPosition(this.node.getPosition());\r\n\r\n            let gm = cc.find(\"Canvas\").getComponent(\"gameManager\");\r\n            gm.gamePause();\r\n            gm.nextLevel();\r\n            let x = this.node.getComponent(\"position\").x;\r\n            let y = this.node.getComponent(\"position\").y;\r\n            com.MAP_OBJ[x][y] = null;\r\n            this.node.destroy();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}