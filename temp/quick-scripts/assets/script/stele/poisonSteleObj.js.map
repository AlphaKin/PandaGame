{"version":3,"sources":["poisonSteleObj.js"],"names":["cc","Class","extends","Component","properties","effect","Prefab","_speed","_dir","v2","_aim","Node","_isBoom","onLoad","onBeginContact","contact","self","other","eff","instantiate","find","addChild","setPosition","node","getPosition","angle","Math","random","destroy","start","dx","x","dy","y","vector","mag","dir","signAngle","degree","PI","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQL,GAAGM,MADH;AAERC,gBAAQ,CAFA;AAGRC,cAAMR,GAAGS,EAHD;AAIRC,cAAMV,GAAGW,IAJD;AAKRC,iBAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBQ,KAHP;;AA0BL;;AAEAC,UA5BK,oBA4BK,CACT,CA7BI;AA+BLC,kBA/BK,0BA+BUC,OA/BV,EA+BmBC,IA/BnB,EA+ByBC,KA/BzB,EA+B+B;AAChC,YAAG,KAAKL,OAAL,IAAgB,KAAnB,EAAyB;AACrB,gBAAIM,MAAMlB,GAAGmB,WAAH,CAAe,KAAKd,MAApB,CAAV;AACAL,eAAGoB,IAAH,CAAQ,QAAR,EAAkBC,QAAlB,CAA2BH,GAA3B;AACAA,gBAAII,WAAJ,CAAgB,KAAKC,IAAL,CAAUC,WAAV,EAAhB;AACAN,gBAAIO,KAAJ,GAAYC,KAAKC,MAAL,KAAc,GAAd,GAAoB,GAAhC;AACA,iBAAKJ,IAAL,CAAUK,OAAV;AACA,iBAAKhB,OAAL,GAAe,IAAf;AACH;AACJ,KAxCI;AA0CLiB,SA1CK,mBA0CI;AACL,aAAKnB,IAAL,GAAYV,GAAGoB,IAAH,CAAQ,uBAAR,CAAZ;AACA;AACA,YAAIU,KAAK,KAAKpB,IAAL,CAAUc,WAAV,GAAwBO,CAAxB,GAA4B,KAAKR,IAAL,CAAUC,WAAV,GAAwBO,CAA7D;AACA,YAAIC,KAAK,KAAKtB,IAAL,CAAUc,WAAV,GAAwBS,CAAxB,GAA4B,KAAKV,IAAL,CAAUC,WAAV,GAAwBS,CAA7D;AACA,YAAIC,SAASlC,GAAGS,EAAH,CAAMqB,EAAN,EAAUE,EAAV,CAAb;AACA,aAAKxB,IAAL,GAAYR,GAAGS,EAAH,CAAMyB,OAAOH,CAAP,GAAWG,OAAOC,GAAP,EAAX,GAA0B,KAAK5B,MAArC,EAA6C2B,OAAOD,CAAP,GAAWC,OAAOC,GAAP,EAAX,GAA0B,KAAK5B,MAA5E,CAAZ;;AAEA,YAAI6B,MAAMpC,GAAGS,EAAH,CAAMqB,EAAN,EAASE,EAAT,CAAV;AACA,YAAIP,QAAQW,IAAIC,SAAJ,CAAcrC,GAAGS,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAd,CAAZ;AACA,YAAI6B,SAASb,QAAQC,KAAKa,EAAb,GAAkB,GAA/B;AACA,aAAKhB,IAAL,CAAUE,KAAV,GAAkB,EAAEa,SAAO,EAAT,CAAlB;AACA;AACH,KAvDI;AAyDLE,UAzDK,kBAyDGC,EAzDH,EAyDO;AACR,aAAKlB,IAAL,CAAUD,WAAV,CAAsB,KAAKC,IAAL,CAAUC,WAAV,GAAwBO,CAAxB,GAA4B,KAAKvB,IAAL,CAAUuB,CAA5D,EAA+D,KAAKR,IAAL,CAAUC,WAAV,GAAwBS,CAAxB,GAA4B,KAAKzB,IAAL,CAAUyB,CAArG;AACH;AA3DI,CAAT","file":"poisonSteleObj.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\stele","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        effect: cc.Prefab,\n        _speed: 5,\n        _dir: cc.v2,\n        _aim: cc.Node,\n        _isBoom: false\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n    },\n\n    onBeginContact(contact, self, other){\n        if(this._isBoom == false){\n            let eff = cc.instantiate(this.effect);\n            cc.find(\"Canvas\").addChild(eff);\n            eff.setPosition(this.node.getPosition());\n            eff.angle = Math.random()*360 - 180;\n            this.node.destroy();\n            this._isBoom = true;\n        }\n    },\n\n    start () {\n        this._aim = cc.find(\"Canvas/Ball/Charactor\");\n        // console.log(typeof(this._aim));\n        let dx = this._aim.getPosition().x - this.node.getPosition().x;\n        let dy = this._aim.getPosition().y - this.node.getPosition().y;\n        let vector = cc.v2(dx, dy);\n        this._dir = cc.v2(vector.x / vector.mag() * this._speed, vector.y / vector.mag() * this._speed);\n\n        let dir = cc.v2(dx,dy);\n        let angle = dir.signAngle(cc.v2(1,0));\n        let degree = angle / Math.PI * 180;\n        this.node.angle = -(degree-90);\n        // console.log(vector);\n    },\n\n    update (dt) {\n        this.node.setPosition(this.node.getPosition().x + this._dir.x, this.node.getPosition().y + this._dir.y);\n    },\n});\n"]}