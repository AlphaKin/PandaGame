{"version":3,"sources":["CharactorBase.js"],"names":["cc","Class","extends","Component","properties","gravity","v2","effect","Node","_speed","_rididbody","_contactGap","onBeginContact","contact","self","other","selfPos","node","getPosition","othPos","f","tmpx","x","tmpy","y","dir","Math","abs","mag","_rigidbody","linearVelocity","onLoad","director","getPhysicsManager","enabled","getComponent","RigidBody","start","update","dt","angle","speedVal","setPosition"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAASL,GAAGM,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CADD,EACiB;AACzBC,gBAAQP,GAAGQ,IAFH;AAGRC,gBAAQ,EAHA;AAIRC,oBAAY,IAJJ;AAKRC,qBAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBQ,KAHP;;AA0BL;AACAC,kBA3BK,0BA2BUC,OA3BV,EA2BmBC,IA3BnB,EA2ByBC,KA3BzB,EA2B+B;AAChC,YAAIC,UAAUF,KAAKG,IAAL,CAAUC,WAAV,EAAd;AAAA,YAAuCC,SAASJ,MAAME,IAAN,CAAWC,WAAX,EAAhD;AACA,YAAIE,IAAI,CAAC,CAAD,EAAG,CAAH,CAAR;AACA,YAAIC,OAAOL,QAAQM,CAAR,GAAUH,OAAOG,CAA5B;AAAA,YAA+BC,OAAOP,QAAQQ,CAAR,GAAUL,OAAOK,CAAvD;AACAJ,UAAE,CAAF,IAAOC,OAAO,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAAvB,EAA0BD,EAAE,CAAF,IAAOG,OAAO,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAAjD;AACA,YAAIE,MAAMzB,GAAGM,EAAH,CAAMe,OAAOK,KAAKC,GAAL,CAASN,IAAT,CAAb,EAA6BE,OAAOG,KAAKC,GAAL,CAASJ,IAAT,CAApC,CAAV;AACAE,cAAMzB,GAAGM,EAAH,CAAMe,OAAOI,IAAIG,GAAJ,EAAP,GAAmBR,EAAE,CAAF,CAAnB,GAA0B,EAA1B,GAA8B,KAAKX,MAAzC,EAAiDc,OAAOE,IAAIG,GAAJ,EAAP,GAAmBR,EAAE,CAAF,CAAnB,GAA0B,EAA1B,GAA+B,KAAKX,MAArF,CAAN;AACA,aAAKoB,UAAL,CAAgBC,cAAhB,GAAiCL,GAAjC;AACH,KAnCI;AAoCLM,UApCK,oBAoCK;AACN/B,WAAGgC,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C,CADM,CAC0C;AAChDlC,WAAGgC,QAAH,CAAYC,iBAAZ,GAAgC5B,OAAhC,GAA0C,KAAKA,OAA/C,CAFM,CAEiD;AACvD,aAAKwB,UAAL,GAAkB,KAAKZ,IAAL,CAAUkB,YAAV,CAAuBnC,GAAGoC,SAA1B,CAAlB;AACA;AACA;AACA;AACA;AACH,KA5CI;AA8CLC,SA9CK,mBA8CI,CAER,CAhDI;AAkDLC,UAlDK,kBAkDGC,EAlDH,EAkDO;AACR,YAAG,KAAKtB,IAAL,CAAUuB,KAAV,GAAkB,GAArB,EACI,KAAKvB,IAAL,CAAUuB,KAAV,GAAkB,CAAC,GAAnB;AACJ;AACA,YAAIC,WAAW,MAAM,KAAKhC,MAA1B;AACA,aAAKQ,IAAL,CAAUuB,KAAV,GAAmB,KAAKvB,IAAL,CAAUuB,KAAV,GAAkBC,QAArC;AACA,aAAKlC,MAAL,CAAYmC,WAAZ,CAAwB,KAAKzB,IAAL,CAAUC,WAAV,EAAxB;AACH;AAzDI,CAAT","file":"CharactorBase.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        gravity: cc.v2(0, -320), // 系统默认的\n        effect: cc.Node,\n        _speed: 10,\n        _rididbody: null,\n        _contactGap: 10\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },s\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    onBeginContact(contact, self, other){\n        let selfPos = self.node.getPosition(), othPos = other.node.getPosition();\n        let f = [1,1];\n        let tmpx = selfPos.x-othPos.x, tmpy = selfPos.y-othPos.y;\n        f[0] = tmpx < 0 ? -1 : 1, f[1] = tmpy < 0 ? -1 : 1;\n        let dir = cc.v2(tmpx = Math.abs(tmpx), tmpy = Math.abs(tmpy));\n        dir = cc.v2(tmpx / dir.mag() * f[0] * 14* this._speed, tmpy / dir.mag() * f[1] * 14 * this._speed);\n        this._rigidbody.linearVelocity = dir;\n    },\n    onLoad () {\n        cc.director.getPhysicsManager().enabled = true; // 开启了物理引擎\n        cc.director.getPhysicsManager().gravity = this.gravity;// 重力加速度的配置\n        this._rigidbody = this.node.getComponent(cc.RigidBody);\n        // var velocity = this._rigidbody;\n        // velocity.linearVelocity.x = 0;\n        // velocity.linearVelocity.y = 0;\n        // this._rigidbody = velocity;\n    },\n\n    start () {\n        \n    },\n\n    update (dt) {\n        if(this.node.angle > 180)\n            this.node.angle = -180;\n        // if(this._contactGap < 1) ++this._contactGap;\n        let speedVal = 0.5 * this._speed;\n        this.node.angle =  this.node.angle + speedVal;\n        this.effect.setPosition(this.node.getPosition());\n    },\n});\n"]}